name: Deploy JHipster Application to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-south-1
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Grant execute permissions to Maven Wrapper
        run: chmod +x ./mvnw

      - name: Build with Maven
        run: ./mvnw -Pprod clean package -DskipTests

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/monorsm-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # permissions:
    #   id-token: write
    #   contents: read

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-jar

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # - name: Print Environment Variables
      #     run: printenv
      - name: Create SSH key for EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > ~/.ssh/aws-key2.pem
          chmod 600 ~/.ssh/aws-key2.pem
      - name: Verify SSH Key File
  run: ls -l ~/.ssh/aws-key2.pem

      - name: Add EC2 instance to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 16.170.221.137 >> ~/.ssh/known_hosts
      - name: Deploy to EC2
        run: |
          scp -i ~/.ssh/aws-key2.pem monorsm-0.0.1-SNAPSHOT.jar ubuntu@16.170.221.137:/home/ubuntu/
          ssh -i ~/.ssh/aws-key2.pem ubuntu@16.170.221.137 <<EOF
                      sudo apt update -y
            sudo apt install -y openjdk-17-jdk nodejs npm docker.io

            # Start backend
            cd /home/ubuntu
            nohup java -jar monorsm-0.0.1-SNAPSHOT.jar > backend.log 2>&1 &

            # Start frontend
            cd /home/ubuntu
            ./npmw install
            nohup ./npmw start > frontend.log 2>&1 &
          EOF

